{
  user {
    email
    roles
    adminExpiration
    memberExpiration
    donorLockExpiration
    apiExpiration
    quests {
      id
      ignoresQuestSlots
      name
      stages {
        objectives {
          __typename
          completions
          description
          isSecret
          ... on GenericObjective {
            genericObjectiveType: type
          }
          ... on UUID {
            uuid
            uuidType: type
          }
          ... on Field {
            fieldWorld: world
            fieldUpperX: upperX
            fieldUpperY: upperY
            fieldUpperZ: upperZ
            fieldLowerX: lowerX
            fieldLowerY: lowerY
            fieldLowerZ: lowerZ
            fieldType: type
          }
          ... on Pokemon {
            pokemonName: pokemon
            pokemonType: type
          }
          ... on RightClickEntityType {
            entityTypeName: entity
          }
          ... on Location {
            locationWorld: world
            locationRange: range
            locationX: x
            locationY: y
            locationZ: z
            locationType: type
          }
          actions {
            __typename
            delay
            ... on GenericAction {
              genericActionType: type
            }
            ... on ClearEntities {
              clearEntitiesEntityType: entityType
              clearEntitiesDistance: distance
            }
            ... on ExecuteCommand {
              executeCommandCommand: command
            }
            ... on GTCurrency {
              gtCurrencyAmount: amount
              gtCurrencyTransactionType: transactionType
              gtCurrencyCurrencyType: type
            }
            ... on GTItem {
              gtItemAmount: amount
              gtItemTransactionType: transactionType
              gtItemItemID: item
            }
            ... on GTPokemon {
              gtPokemonName: pokemon
              gtPokemonTransactionType: transactionType
              gtPokemonSpec: spec
            }
            ... on SendMessage {
              sendMessageText: message
              sendMessageType: type
            }
            ... on SendChatGUI {
              sendChatGUIMessages: messages
            }
            ... on SendTitle {
              sendTitlefadeIn: fadeIn
              sendTitlefadeOut: fadeOut
              sendTitlestay: stay
              sendTitletitle: title
              sendTitlesubtitle: subtitle
              sendTitleactionBar: actionBar
            }
            ... on SkipToStage {
              skipToStageStageIndex: stageIndex
            }
            ... on Teleport {
              teleportWorld: world
              teleportX: x
              teleportY: y
              teleportZ: z
            }
          }
          conditions {
            __typename
            inverted
            ... on AtTime {
              atTimeTimeEnum: time
            }
            ... on HasPokemon {
              hasPokemonName: pokemon
              hasPokemonType: type
            }
            ... on HasCompleted {
              hasCompletedQuestID: questId
            }
            ... on HasPermission {
              hasPermissionNode: permissionNode
            }
            ... on HasLevel {
              hasLevelAcceptHigherLevel: acceptHigherLevel
              hasLevelAmount: level
            }
            ... on HasItem {
              hasItemID: item
              hasItemHoldingType: type
            }
            ... on HasMoney {
              hasMoneyAmount: amount
            }
            ... on LookingAt {
              lookingAtMinYaw: minYaw
              lookingAtMaxYaw: maxYaw
              lookingAtMinPitch: minPitch
              lookingAtMaxPitch: maxPitch
            }
            ... on WearingArmor {
              wearingArmorItemIDs: armor
            }
            ... on WithinCoordinates {
              withinCoordinatesUpperX: upperX
              withinCoordinatesUpperY: upperY
              withinCoordinatesUpperZ: upperZ
              withinCoordinatesLowerX: lowerX
              withinCoordinatesLowerY: lowerY
              withinCoordinatesLowerZ: lowerZ
            }
            ... on InWorld {
              InWorldName: world
            }
          }
        }
      }
    }
  }
}
